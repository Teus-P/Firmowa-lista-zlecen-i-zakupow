/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'idea'
    // Apply the application plugin to add support for building an application
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

ext {
    ext.moduleName = 'Firmowa.lista.zlecen.i.zakupow.main'
}

// Define the main class for the application
mainClassName = "pl.app.launch.LaunchApp"


idea {
    module {
        inheritOutputDirs = true
    }
}

test {
    systemProperty "file.encoding", "utf-8"
}

run {
    jvmArgs = [
            '--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.binding=ALL-UNNAMED',
            '--add-exports=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED',
            '--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED'
    ]
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.incremental = true

    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.base/com.sun.javafx.event=ALL-UNNAMED"
    ])
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED"
    ])
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED"
    ])
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED",
    ])
    options.compilerArgs.addAll([
            "--add-exports",
            "javafx.controls/com.sun.javafx.scene.control.behavior.ComboBoxBaseBehavior=ALL-UNNAMED",
    ])
/*    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs += [
                '--module-path', classpath.asPath,
                // For various usages of TraversalEngine
                "--add-exports=javafx.graphics/com.sun.javafx.scene=com.jfoenix",
                "--add-exports=javafx.graphics/com.sun.javafx.scene.text=com.jfoenix",
                "--add-exports=javafx.graphics/com.sun.javafx.geom=com.jfoenix",
                "--add-exports=javafx.graphics/com.sun.javafx.stage=com.jfoenix",
                "--add-exports=javafx.graphics/com.sun.javafx.util=com.jfoenix",
                "--add-exports=javafx.graphics/com.sun.javafx.scene.traversal=com.jfoenix",

                // For various behaviors across controls
                "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=com.jfoenix",
                "--add-exports=javafx.controls/com.sun.javafx.scene.control=com.jfoenix",
                "--add-exports=javafx.controls/com.sun.javafx.scene.control.inputmap=com.jfoenix",
                "--add-exports=javafx.base/com.sun.javafx.binding=com.jfoenix",
                // For ReadOnlyUnbackedObservableList across files
//                    "--add-exports=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED",
                // For InputMap used in behavior classes
//                    "--add-exports=javafx.controls/com.sun.javafx.scene.control.inputmap=ALL-UNNAMED",
                // For EventHandlerManager across files
                "--add-exports=javafx.base/com.sun.javafx.event=com.jfoenix",
                "--add-exports=javafx.base/com.sun.javafx.event=com.jfoenix",
                // For MappingChange, NonIterableChange across files
//                    "--add-exports=javafx.base/com.sun.javafx.collections=ALL-UNNAMED",
                // For VersionInfo in VersionChecker
//                    "--add-exports=javafx.base/com.sun.javafx.runtime=ALL-UNNAMED",
                // For WebPage in SVGLoader
//                    "--add-exports=javafx.web/com.sun.webkit=ALL-UNNAMED"
//                    "--add-modules=java.se.ee"
        ]
        classpath = files()*/
    // }
}


sourceCompatibility = 11
targetCompatibility = 11

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    // https://mvnrepository.com/artifact/com.h2database/h2
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
    compile group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.6.1'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
    compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '4.2.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.0'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.6.1'
    // https://mvnrepository.com/artifact/com.jfoenix/jfoenix
    compile group: 'com.jfoenix', name: 'jfoenix', version: '9.0.8'
    // https://mvnrepository.com/artifact/org.openjfx/javafx
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
}



javafx {
    version = "11.0.1"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.base', 'javafx.media', 'javafx.web', 'javafx.swing']
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDirs = ['src/main/java', 'src/main/resources']
            exclude "**/*.java"
        }
    }

    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}


